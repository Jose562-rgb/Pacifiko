--Task 1: Table Creation
--Creacion de la base de datos
Create Database PruebaPacifiko;

--Usar base de datos creada 
Use PruebaPacifiko;

--Creacion de tablas 
Create table Customers (
    customer_id int identity (1,1) primary key,
    first_name varchar(50),
    last_name varchar(50),
	email varchar(50),
    phone int
);

Create table Products (
    product_id int identity (1,1) primary key,
    product_name varchar(50),
    price float,
	stock_quantity int
);

Create table Orders (
    order_id int identity (1,1) primary key,
    customer_id int,
    order_date date
);

Create table OrderItems (
    order_item_id int identity (1,1) primary key,
    order_id int,
    product_id int,
	quantity int,
	subtotal float
);

--Task 2: CRUD Operations
--1. Insert a new product with the following details: Product Name: "Laptop", Price: 1000.00, Stock Quantity: 50.
Insert into Products (product_name, price, stock_quantity)
values 
('Tablet','100.00','50'),
('Teléfono inteligente', 600.00, 25),
('Tableta', 300.00, 15),
('Portátil', 1200.00, 10),
('Cámara digital', 400.00, 20),
('Auriculares inalámbricos', 100.00, 30),
('Altavoz Bluetooth', 80.00, 40),
('Smartwatch', 200.00, 35),
('Monitor de computadora', 250.00, 18),
('Impresora multifunción', 150.00, 22);

--2. Update the stock quantity of the product with product_id = 3 to 75.
Update Products 
set stock_quantity = '75'
where product_id = 3;

--3. Delete the order with order_id = 10 and its associated order items.
DELETE FROM Orders WHERE order_id = 10;
DELETE FROM OrderItems WHERE order_id = 10;

--4. Retrieve the customer's first and last names who placed the order with order_id = 5.
Select Customers.first_name, Customers.last_name
from Customers
inner join Orders ON Customers.customer_id = Orders.customer_id
WHERE Orders.order_id = 5;

--5. Calculate the total revenue generated by each product (sum of subtotals from order items).
Select oi.product_id, p.product_name, SUM(oi.subtotal) as total_ingresos
from OrderItems oi
inner join Products p on p.product_id = oi.product_id
group by oi.product_id, p.product_name;


--Task 3: Stored Procedures
--Creacion del stored procedures
CREATE PROCEDURE CalcularIngresosCliente
    @customer_id INT
AS
BEGIN
    SELECT SUM(oi.subtotal) AS total_ingresos
    FROM Orders o
    INNER JOIN OrderItems oi ON o.order_id = oi.order_id
    WHERE o.customer_id = @customer_id;
END;

--Llamada al stored procedures
EXEC CalcularIngresosCliente @customer_id = 1;


--Task 4: Integration
--Display a list of products and their stock quantities.
Select product_name, stock_quantity from Products

--Allow the user to search for products by their name.
Select product_name, stock_quantity from Products 
where product_name like 'Laptop'

--Allow the user to place an order by selecting a customer and adding order items.
--Muestra la lista de clientes
Select customer_id, first_name, last_name 
from Customers;

--Muestra la lista de productos
Select product_id, product_name, price, stock_quantity
from Products;